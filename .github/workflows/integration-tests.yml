name: Integration Tests

on:
  pull_request:
    branches: [ main ]
  schedule:
    # Run integration tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '20'

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: uwsgaming_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup test environment
      run: |
        cp .env.example .env.test
        echo "DATABASE_URL=postgresql://test:test@localhost:5432/uwsgaming_test" >> .env.test
        echo "REDIS_URL=redis://localhost:6379" >> .env.test
        echo "NODE_ENV=test" >> .env.test

    - name: Setup database
      run: |
        export DATABASE_URL=postgresql://test:test@localhost:5432/uwsgaming_test
        npm run generate -w @uwsgaming/database
        npm run migrate -w @uwsgaming/database

    - name: Start backend server
      run: |
        npm run build -w @uwsgaming/backend
        npm start -w @uwsgaming/backend &
        sleep 10
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/uwsgaming_test
        NODE_ENV: test
        API_PORT: 4000

    - name: Start frontend server
      run: |
        npm run build -w @uwsgaming/frontend
        npm start -w @uwsgaming/frontend &
        sleep 15
      env:
        NEXT_PUBLIC_API_URL: http://localhost:4000
        NEXT_PUBLIC_ENVIRONMENT: test
        PORT: 3000

    - name: Wait for services
      run: |
        npx wait-on http://localhost:3000 http://localhost:4000/api/v1/health --timeout 60000

    - name: Run integration tests
      run: |
        # API Integration Tests
        npm run test:integration -w @uwsgaming/backend

        # Frontend E2E Tests
        npm run test:e2e -w @uwsgaming/frontend
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/uwsgaming_test
        PLAYWRIGHT_BASE_URL: http://localhost:3000
        API_BASE_URL: http://localhost:4000

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results
        path: |
          apps/*/coverage/
          apps/*/test-results/
          apps/*/playwright-report/

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: apps/frontend/playwright-report/
        retention-days: 30
